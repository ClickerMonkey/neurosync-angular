{"version":3,"sources":["rekord-angular.min.js"],"names":["root","factory","define","amd","Rekord","angular","module","exports","global","require","this","ng","undefined","InitializeRekord","$http","$filter","Rest","database","RestFactory","api","Rekord_rest","call","ajax","options","success","failure","then","buildURL","db","model","$key","formatDate","date","format","prototype","removeTrailingSlash","x","charAt","length","substring","Angular","all","execute","get","create","encoded","update","remove","query","url","data","method","isEmpty","extraOptions","offlineValue","debug","Debugs","REST","forceOffline","onRestSuccess","response","onRestError","status","vars","transfer","isObject","adjustOptions","isFormatInput","setRest","listenToNetworkStatus","rest","noop","RestClass","Sync","scope","target","callback","on","Select","source","select","fill","$onRemove","bind","$handleRemove","$onRemoves","$handleRemoves","$onCleared","$handleCleared","$onReset","$handleReset","$reset","$select","hasModule","moduleName","tested","e","getRouteParameter","cached","buildParamResolver","$stateParams","$route","current","buildTemplateResolver","routeParams","text","isString","ResolveInput","obj","resolver","resolved","prop","ModelFilter","models","toArray","array","ids","i","splice","app","isFunction","isArray","isBoolean","isRekord","Resolve","Factory","a","Array","Database","targetFunction","$change","off","notify","$on","$evalAsync","apply","ScopeDigest","$source","$disconnect","$connect","Collection","Events","Remove","Removes","Cleared","Reset","key","keyHandler","buildKeyFromInput","keys","$selection","out","selection","push","removed","has","ModelCollection","selectable","name","$q","routing","defer","cachedValue","resolve","paramResolver","templateResolver","cache","promise","resolvedValue","param","$inject","inject","arguments","arg","input","resolvedInput","grabModel","instance","reject","fetch","fetchAll","grab","grabAll","properties","dontSave","cascade","resolvedProperties","$isSaved","$once","Model","RemoteSaves","search","props","resolvedQuery","remoteQuery","$promise","searchAt","index","paging","resolvedIndex","complete","result","ready","where","whereProperties","whereValue","whereEquals","resolvedWhereProperties","resolvedWhereValue","filtered","helper","impl","ref","rekord","run","paged","searchPaged","context","lazyLoad","initialized","remoteLoaded","refresh","value","equals","filter","Bind"],"mappings":"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","file":"rekord-angular.min.js","sourcesContent":["/* rekord-angular 1.5.0 - A rekord binding to angular - implementing Rekord.rest by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['rekord', 'angular'], function(Rekord, angular) { // jshint ignore:line\n      return factory(root, Rekord, angular);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global, require('rekord'), require('angular'));  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.Rekord = factory(root, root.Rekord, root.angular);\n  }\n}(this, function(global, Rekord, ng, undefined)\n{\n\n  var app = ng.module('rekord', []);\n\n  var isFunction = Rekord.isFunction;\n  var isString = Rekord.isString;\n  var isArray = Rekord.isArray;\n  var isObject = Rekord.isObject;\n  var isBoolean = Rekord.isBoolean;\n  var isRekord = Rekord.isRekord;\n  var isEmpty = Rekord.isEmpty;\n  var isFormatInput = Rekord.isFormatInput;\n  \n  var format = Rekord.format;\n  var bind = Rekord.bind;\n  var noop = Rekord.noop;\n  var transfer = Rekord.transfer;\n\n  var Rekord_rest = Rekord.rest;\n\n  var Resolve = {};\n  var Factory = {};\n\n  ng.isArray = function(a)\n  {\n    return a instanceof Array;\n  };\n\n\nfunction InitializeRekord($http, $filter)\n{\n  function Rest(database)\n  {\n    this.database = database;\n  }\n\n  Rest.prototype =\n  {\n    removeTrailingSlash: function(x)\n    {\n      return x.charAt(x.length - 1) === '/' ? x.substring(0, x.length - 1) : x;\n    },\n    buildURL: function(model)\n    {\n      return this.removeTrailingSlash( Rekord.Angular.buildURL( this.database, model ) );\n    },\n    all: function( options, success, failure )\n    {\n      this.execute( 'GET', null, undefined, this.buildURL(), options, success, failure, [] );\n    },\n    get: function( model, options, success, failure )\n    {\n      this.execute( 'GET', model, undefined, this.buildURL( model ), options, success, failure );\n    },\n    create: function( model, encoded, options, success, failure )\n    {\n      this.execute( 'POST', model, encoded, this.buildURL(), options, success, failure, {} );\n    },\n    update: function( model, encoded, options, success, failure )\n    {\n      this.execute( 'PUT', model, encoded, this.buildURL( model ), options, success, failure, {} );\n    },\n    remove: function( model, options, success, failure )\n    {\n      this.execute( 'DELETE', model, undefined, this.buildURL( model ), options, success, failure, {} );\n    },\n    query: function( url, data, options, success, failure )\n    {\n      var method = isEmpty( data ) ? 'GET' : 'POST';\n\n      this.execute( method, null, data, url, options, success, failure );\n    },\n    execute: function( method, model, data, url, extraOptions, success, failure, offlineValue )\n    {\n      Rekord.debug( Rekord.Debugs.REST, this, method, url, data );\n\n      if ( Rekord.forceOffline )\n      {\n        failure( offlineValue, 0 );\n      }\n      else\n      {\n        var onRestSuccess = function(response)\n        {\n          success( response.data );\n        };\n\n        var onRestError = function(response)\n        {\n          failure( response.data, response.status );\n        };\n\n        var vars = transfer( Rekord.Angular.vars, transfer( model, {} ) );\n        var options = transfer( Rekord.Angular.options, {\n          method: method,\n          data: data,\n          url: url\n        });\n\n        if ( isObject( extraOptions ) )\n        {\n          transfer( options, extraOptions );\n\n          if ( isObject( extraOptions.vars ) )\n          {\n            transfer( extraOptions.vars, vars );\n          }\n        }\n\n        Rekord.Angular.adjustOptions( options, this.database, method, model, data, url, vars, success, failure );\n\n        if ( isFormatInput( options.url ) )\n        {\n          options.url = format( options.url, vars );\n        }\n\n        Rekord.Angular.ajax( options, onRestSuccess, onRestError );\n      }\n    }\n  };\n\n  function RestFactory(database)\n  {\n    if ( !database.api )\n    {\n      return Rekord_rest.call( this, database );\n    }\n\n    return new Rest( database );\n  }\n\n  function ajax(options, success, failure)\n  {\n    $http( options ).then( success, failure );\n  }\n\n  function buildURL(db, model)\n  {\n    return model ? db.api + model.$key() : db.api;\n  }\n\n  function formatDate(date, format)\n  {\n    return $filter('date')( date, format );\n  }\n\n  Rekord.setRest( RestFactory );\n\n  Rekord.listenToNetworkStatus();\n\n  Rekord.formatDate = formatDate;\n\n  Rekord.Angular =\n  {\n    rest: RestFactory,\n    options: {},\n    vars: {},\n    adjustOptions: noop,\n    ajax: ajax,\n    buildURL: buildURL,\n    RestClass: Rest\n  };\n}\n\nfunction Sync( scope, target, callback )\n{\n  if ( !(this instanceof Sync) )\n  {\n    return new Sync( scope, target, callback );\n  }\n\n  this.scope = scope;\n  this.target = target;\n  this.callback = callback;\n\n  this.on();\n}\n\nSync.prototype =\n{\n  on: function()\n  {\n    var target = this.target;\n\n    if ( isRekord( target ) )\n    {\n      target = this.target = target.Database;\n    }\n\n    var targetFunction = target.$change ? '$change' : 'change';\n\n    if ( target[ targetFunction ] )\n    {\n      this.off = target[ targetFunction ]( this.notify, this );\n\n      this.scope.$on( '$destroy', this.off );\n    }\n  },\n  notify: function()\n  {\n    // $digest would be better for performance - but there's no official way\n    // to see if a digest cycle is currently running\n    this.scope.$evalAsync();\n\n    if ( isFunction( this.callback ) )\n    {\n      this.callback.apply( this.target );\n    }\n\n    Rekord.debug( Rekord.Debugs.ScopeDigest, this, this.scope );\n  }\n};\n\n\nfunction Select(source, select, fill)\n{\n  this.$onRemove  = bind( this, this.$handleRemove );\n  this.$onRemoves = bind( this, this.$handleRemoves );\n  this.$onCleared = bind( this, this.$handleCleared );\n  this.$onReset   = bind( this, this.$handleReset );\n\n  this.$reset( source );\n  this.$select( select, fill );\n}\n\nSelect.prototype =\n{\n\n  $reset: function(source)\n  {\n    if ( this.$source !== source )\n    {\n      if ( this.$source )\n      {\n        this.$disconnect();\n      }\n\n      this.$source = source;\n      this.$connect();\n    }\n  },\n\n  $connect: function()\n  {\n    this.$source.on( Rekord.Collection.Events.Remove, this.$onRemove );\n    this.$source.on( Rekord.Collection.Events.Removes, this.$onRemoves );\n    this.$source.on( Rekord.Collection.Events.Cleared, this.$onCleared );\n    this.$source.on( Rekord.Collection.Events.Reset, this.$onReset );\n  },\n\n  $disconnect: function()\n  {\n    this.$source.off( Rekord.Collection.Events.Remove, this.$onRemove );\n    this.$source.off( Rekord.Collection.Events.Removes, this.$onRemoves );\n    this.$source.off( Rekord.Collection.Events.Cleared, this.$onCleared );\n    this.$source.off( Rekord.Collection.Events.Reset, this.$onReset );\n  },\n\n  $select: function(select, fill)\n  {\n    if ( isArray( select ) )\n    {\n      var db = this.$source.database;\n      var remove = {};\n\n      for (var key in this)\n      {\n        if ( isBoolean( this[ key ] ) )\n        {\n          remove[ key ] = this[ key ];\n        }\n      }\n\n      for (var i = 0; i < select.length; i++)\n      {\n        var key = db.keyHandler.buildKeyFromInput( select[ i ] );\n\n        this[ key ] = true;\n\n        delete remove[ key ];\n      }\n\n      for (var key in remove)\n      {\n        delete this[ key ];\n      }\n\n      if ( fill )\n      {\n        var keys = this.$source.keys();\n\n        for (var i = 0; i < keys.length; i++)\n        {\n          var key = keys[ i ];\n\n          if ( !this[ key ] )\n          {\n            this[ key ] = false;\n          }\n        }\n      }\n\n    }\n  },\n\n  $selection: function(out)\n  {\n    var source = this.$source;\n    var selection = out || [];\n\n    for (var key in this)\n    {\n      if ( this[ key ] === true )\n      {\n        var model = source.get( key );\n\n        if ( model )\n        {\n          selection.push( model );\n        }\n      }\n    }\n\n    return selection;\n  },\n\n  $handleRemove: function(removed)\n  {\n    var db = this.$source.database;\n    var key = db.keyHandler.buildKeyFromInput( removed );\n\n    delete this[ key ];\n  },\n\n  $handleRemoves: function(removed)\n  {\n    for (var i = 0; i < removed.length; i++)\n    {\n      this.$handleRemove( removed[i] );\n    }\n  },\n\n  $handleCleared: function()\n  {\n    for (var key in this)\n    {\n      if ( isBoolean( this[ key ] ) )\n      {\n        delete this[ key ];\n      }\n    }\n  },\n\n  $handleReset: function()\n  {\n    var source = this.$source;\n\n    for (var key in this)\n    {\n      if ( isBoolean( this[ key ] ) )\n      {\n        if ( !source.has( key ) )\n        {\n          delete this[ key ];\n        }\n      }\n    }\n  }\n};\n\nRekord.ModelCollection.prototype.selectable = function(select, fill)\n{\n  return new Select( this, select, fill );\n};\n\n\nfunction hasModule(moduleName)\n{\n  if ( moduleName in hasModule.tested )\n  {\n    return hasModule.tested[ moduleName ];\n  }\n\n  try\n  {\n    ng.module( moduleName );\n\n    hasModule.tested[ moduleName ] = true;\n  }\n  catch (e)\n  {\n    hasModule.tested[ moduleName ] = false;\n  }\n\n  return hasModule.tested[ moduleName ];\n}\n\nhasModule.tested = {};\n\nfunction getRouteParameter()\n{\n  return getRouteParameter.cached ? getRouteParameter.cached : getRouteParameter.cached =\n    ( hasModule( 'ui.router' ) ? '$stateParams' :\n      ( hasModule( 'ngRoute' ) ? '$route' :\n        false ) );\n}\n\nfunction buildParamResolver()\n{\n  if ( hasModule( 'ui.router') )\n  {\n    return function($stateParams)\n    {\n      return $stateParams;\n    };\n  }\n  else if ( hasModule( 'ngRoute') )\n  {\n    return function($route)\n    {\n      return $route.current;\n    };\n  }\n  return function()\n  {\n    return false;\n  };\n}\n\nfunction buildTemplateResolver(routeParams)\n{\n  return function(text)\n  {\n    if ( isString( text ) && routeParams )\n    {\n      return format( text, routeParams );\n    }\n\n    return text;\n  };\n}\n\ngetRouteParameter.cached = null;\n\nResolve.factory = function( name, callback )\n{\n  var param = getRouteParameter();\n  var paramResolver = buildParamResolver();\n  var cache = false;\n  var cachedValue = void 0;\n\n  function factory($q, routing)\n  {\n    var defer = $q.defer();\n\n    if ( cachedValue !== void 0 )\n    {\n      defer.resolve( cachedValue );\n    }\n    else\n    {\n      var routeParams = paramResolver( routing );\n      var templateResolver = buildTemplateResolver( routeParams );\n\n      if ( cache )\n      {\n        defer.promise.then(function(resolvedValue)\n        {\n          cachedValue = resolvedValue;\n        });\n      }\n\n      Rekord.get( name ).success(function(model)\n      {\n        callback( model, defer, templateResolver );\n      });\n    }\n\n    return defer.promise;\n  }\n\n  factory.$inject = ['$q'];\n\n  if ( param )\n  {\n    factory.$inject.push( param );\n  }\n\n  factory.cache = function()\n  {\n    cache = true;\n\n    return factory;\n  };\n\n  factory.inject = function()\n  {\n    for (var i = 0; i < arguments.length; i++)\n    {\n      var arg = arguments[ i ];\n\n      if ( isArray( arg ) )\n      {\n        factory.$inject.push.apply( factory.$inject, arg );\n      }\n      else\n      {\n        factory.$inject.push( arg );\n      }\n    }\n\n    return factory;\n  };\n\n  return factory;\n};\n\nfunction ResolveInput(obj, resolver)\n{\n  if ( isObject( obj ) )\n  {\n    var resolved = {};\n\n    for (var prop in obj)\n    {\n      resolved[ prop ] = resolver( obj[ prop ] );\n    }\n\n    return resolved;\n  }\n\n  return resolver( obj );\n}\n\nResolve.model = function( name, input )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    var resolvedInput = ResolveInput( input, templateResolver );\n\n    model.Database.grabModel( resolvedInput, function(instance)\n    {\n      if ( instance )\n      {\n        defer.resolve( instance );\n      }\n      else\n      {\n        defer.reject();\n      }\n    });\n  });\n};\n\nResolve.fetch = function( name, input, options )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    var resolvedInput = ResolveInput( input, templateResolver );\n\n    model.fetch( resolvedInput, options, function(instance)\n    {\n      defer.resolve( instance );\n    });\n  });\n};\n\nResolve.fetchAll = function( name )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    model.fetchAll(function(models)\n    {\n      defer.resolve( models );\n    });\n  });\n};\n\nResolve.grab = function( name, input )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    var resolvedInput = ResolveInput( input, templateResolver );\n\n    model.grab( resolvedInput, function(instance)\n    {\n      defer.resolve( instance );\n    });\n  });\n};\n\nResolve.grabAll = function( name )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    model.grabAll(function(models)\n    {\n      defer.resolve( models );\n    });\n  });\n};\n\nResolve.create = function( name, properties, dontSave, cascade, options )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    var resolvedProperties = ResolveInput( properties, templateResolver );\n\n    if ( dontSave )\n    {\n      defer.resolve( new model( resolvedProperties ) );\n    }\n    else\n    {\n      var instance = model.create( resolvedProperties, cascade, options );\n\n      if ( instance.$isSaved() )\n      {\n        defer.resolve( instance );\n      }\n      else\n      {\n        instance.$once( Rekord.Model.Events.RemoteSaves, function()\n        {\n          defer.resolve( instance );\n        });\n      }\n    }\n  });\n};\n\nResolve.search = function( name, url, options, props )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    var resolvedQuery = ResolveInput( url, templateResolver );\n    var remoteQuery = model.search( resolvedQuery, options, props, true );\n\n    remoteQuery.$promise.success(function()\n    {\n      defer.resolve( remoteQuery );\n    });\n\n    remoteQuery.$promise.failure(function()\n    {\n      defer.reject();\n    });\n  });\n};\n\nResolve.searchAt = function( name, index, url, paging, options, props )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    var resolvedIndex = ResolveInput( index, templateResolver );\n    var resolvedQuery = ResolveInput( url, templateResolver );\n    var promise = model.searchAt( resolvedIndex, resolvedQuery, paging, options, props );\n\n    promise.complete(function(result)\n    {\n      defer.resolve( result );\n    });\n  });\n};\n\nResolve.all = function( name )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    model.Database.ready(function()\n    {\n      defer.resolve( model.all() );\n    });\n  });\n};\n\nResolve.where = function( name, whereProperties, whereValue, whereEquals )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    var resolvedWhereProperties = ResolveInput( whereProperties, templateResolver );\n    var resolvedWhereValue = ResolveInput( whereValue, templateResolver );\n\n    model.Database.ready(function()\n    {\n      defer.resolve( model.all().filtered( resolvedWhereProperties, resolvedWhereValue, whereEquals ) );\n    });\n  });\n};\n\nResolve.ready = function( name )\n{\n  return Resolve.factory( name, function(model, defer, templateResolver)\n  {\n    model.Database.ready(function()\n    {\n      defer.resolve( model );\n    });\n  });\n};\n\nFactory.helper = function(name, impl)\n{\n  var ref = null;\n\n  Rekord.get( name ).success(function(rekord)\n  {\n    ref = rekord;\n  });\n\n  return function FactoryImplementation()\n  {\n    if ( !ref )\n    {\n      throw name + ' Rekord failed to load or does not exist.';\n    }\n\n    return impl( ref );\n  };\n};\n\nFactory.search = function(name, url, options, props, run, paged)\n{\n  return Factory.helper( name, function(model)\n  {\n    return paged ?\n      model.searchPaged( url, options, props, run ) :\n      model.search( url, options, props, run );\n  });\n};\n\nFactory.ref = function(name, callback, context)\n{\n  return Factory.helper( name, function(model)\n  {\n    return model;\n  });\n};\n\nFactory.lazyLoad = function(name, callback, context)\n{\n  var initialized = {};\n\n  return Factory.helper( name, function(model)\n  {\n    if ( !model.Database.remoteLoaded && !(name in initialized) )\n    {\n      initialized[ name ] = true;\n\n      model.Database.refresh( callback, context );\n    }\n\n    return model;\n  });\n};\n\nFactory.filtered = function(name, where, value, equals)\n{\n  return Factory.helper( name, function(model)\n  {\n    return model.filtered( where, value, equals );\n  });\n};\n\nFactory.all = function(name)\n{\n  return Factory.helper( name, function(model)\n  {\n    return model.all();\n  });\n};\n\nFactory.fetchAll = function(name, callback, context)\n{\n  return Factory.helper( name, function(model)\n  {\n    return model.fetchAll( callback, context );\n  });\n};\n\nFactory.grabAll = function(name, callback, context)\n{\n  return Factory.helper( name, function(model)\n  {\n    return model.grabAll( callback, context );\n  });\n};\n\n\nfunction ModelFilter()\n{\n  return function filterModels(models)\n  {\n    if ( !models || !models.toArray )\n    {\n      return models;\n    }\n\n    var array = models.toArray();\n    var ids = {};\n\n    for (var i = 0; i < array.length; i++)\n    {\n      var model = array[ i ];\n\n      if ( !model.$key || model.$key() in ids )\n      {\n        array.splice( i--, 1 );\n      }\n      else\n      {\n        ids[ model.$key() ] = model;\n      }\n    }\n\n    return array;\n  };\n}\n\n\n  app\n    .run( ['$http', '$filter', InitializeRekord] )\n    .filter( 'models', ModelFilter )\n  ;\n\n  Rekord.Bind = Sync;\n  Rekord.Sync = Sync;\n  Rekord.Resolve = Resolve;\n  Rekord.Select = Select;\n  Rekord.Factory = Factory;\n  Rekord.Debugs.ScopeDigest = 100000;\n\n  return Rekord;\n\n}));\n"],"sourceRoot":"/source/"}